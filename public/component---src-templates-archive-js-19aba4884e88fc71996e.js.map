{"version":3,"file":"component---src-templates-archive-js-19aba4884e88fc71996e.js","mappings":"2NAwGA,UA5FgB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACvBC,EAA+GD,EAA/GC,cAAeC,EAAgGF,EAAhGE,cAAeC,EAAiFH,EAAjFG,SAAUC,EAAuEJ,EAAvEI,SAAUC,EAA6DL,EAA7DK,YAAaC,EAAgDN,EAAhDM,aAAcC,EAAkCP,EAAlCO,MAAOC,EAA2BR,EAA3BQ,WAAYC,EAAeT,EAAfS,WAClGC,EAAQZ,EAAKa,aAAaC,MAEhC,OACI,gCACI,gBAAC,IAAD,CAAUb,SAAUA,IACpB,gBAAC,KAAD,CAAQc,QAAQ,EAAMd,SAAS,UAAUQ,MAAOA,EAAOC,WAAYA,EAAYC,WAAYA,GAC3F,wBAAMK,UAAU,aACZ,uBAAKA,UAAU,aACX,uBAAKA,UAAU,kBACX,uBAAKA,UAAU,sBACPR,EACA,sBAAIQ,UAAU,oBAAoBT,EAAlC,IAAgDC,EAAhD,KACA,sBAAIQ,UAAU,oBAAoBT,EAAlC,KAEJ,sBAAIS,UAAU,6BAAd,MAAoDJ,EAAMK,OAA1D,OAGZ,gBAAC,IAAD,CAAYC,MAAM,sBAClB,uBAAKF,UAAU,UAEX,gBAAC,KAAD,CAAgBJ,MAAOA,EAAOG,QAAQ,IACtC,uBAAKC,UAAU,WACX,uBAAKA,UAAU,qBACX,uBAAKA,UAAU,eACf,uBAAKA,UAAU,eACf,gBAAC,EAAAG,KAAD,CAAMC,GAAE,IAAOJ,UAAU,sBAAsBK,GAAG,SAAlD,UACI,uBAAKL,UAAU,qBACXR,EACA,gCACKL,GACD,gBAAC,EAAAgB,KAAD,CAAMC,GAAE,YAAcjB,EAAiBa,UAAU,uBAC7C,gBAAC,IAAD,CAAiBA,UAAU,mBAAmBK,GAAG,aACjD,uBAAKL,UAAU,qBAAf,OAIHZ,GACD,gBAAC,EAAAe,KAAD,CAAMC,GAAE,YAAchB,EAAiBY,UAAU,uBAC7C,uBAAKA,UAAU,qBAAf,MACA,gBAAC,IAAD,CAAkBA,UAAU,mBAAmBK,GAAG,WAK1D,gCACKhB,GACD,gBAAC,EAAAc,KAAD,CAAMC,GAAE,YAAcf,EAAYW,UAAU,uBACxC,gBAAC,IAAD,CAAiBA,UAAU,mBAAmBK,GAAG,aACjD,uBAAKL,UAAU,qBAAf,OAIHV,GACD,gBAAC,EAAAa,KAAD,CAAMC,GAAE,YAAcd,EAAYU,UAAU,uBACxC,uBAAKA,UAAU,qBAAf,MACA,gBAAC,IAAD,CAAkBA,UAAU,mBAAmBK,GAAG,aAQlE,gBAAC,KAAD,CAAYZ,MAAOA,EAAOC,WAAYA,EAAYC,WAAYA,SAO1E,gBAAC,IAAD,CAAYO,MAAM,sBACd,gBAAC,KAAD,CAAgBN,MAAOA,EAAOG,QAAQ,QAOzD,C","sources":["webpack://gatsby-starter-ghost/./src/templates/archive.js"],"sourcesContent":["import * as React  from \"react\";\nimport PropTypes from \"prop-types\";\nimport MediaQuery from \"react-responsive\";\nimport { graphql, Link } from \"gatsby\";\nimport { Layout, ArchiveNav, InfiniteScroll } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\nimport { ChevronRightIcon, ChevronLeftIcon } from '@heroicons/react/outline'\n\n/**\n * archive page\n */\n\nconst Archive = ({ data, location, pageContext }) => {\n    const { prevyearmonth, nextyearmonth, prevyear, nextyear, currentyear, currentmonth, years, yearMonths, PostCounts } = pageContext;\n    const posts = data.allGhostPost.edges;\n\n    return (\n        <>\n            <MetaData location={location} />\n            <Layout isHome={true} location=\"archive\" years={years} yearMonths={yearMonths} PostCounts={PostCounts}>\n            <main className=\"site-main\">\n                <div className=\"container\">\n                    <div className=\"archive-header\">\n                        <div className=\"archive-header-box\">\n                            {   currentmonth ?\n                                <h2 className=\"archive-headline\">{currentyear}年{currentmonth}月</h2> :\n                                <h2 className=\"archive-headline\">{currentyear}年</h2>\n                            }\n                            <h4 className=\"archive-header-postcounts\">&ndash;  {posts.length}件</h4>\n                        </div>\n                    </div>\n                <MediaQuery query=\"(min-width: 800px)\">\n                <div className=\"Layout\">\n                \n                    <InfiniteScroll posts={posts} isHome={true}/>\n                    <div className=\"sidebar\">\n                        <div className=\"sidebar-container\">\n                            <div className=\"sidebar-box\">\n                            <div className=\"archive-nav\">\n                            <Link to={`/`} className=\"archive-nav-content\" id=\"totop\" >トップに戻る</Link>\n                                <div className=\"archive-nav-items\">\n                                {   currentmonth ? (\n                                    <>  \n                                        {prevyearmonth &&\n                                        <Link to={`/archive/${prevyearmonth}`} className=\"archive-nav-content\">\n                                            <ChevronLeftIcon className=\"archive-nav-icon\" id=\"previous\" />\n                                            <div className=\"post-nav-headline\">前月</div>\n                                        </Link>\n                                        }\n                                    \n                                        {nextyearmonth &&\n                                        <Link to={`/archive/${nextyearmonth}`} className=\"archive-nav-content\">\n                                            <div className=\"post-nav-headline\">次月</div>\n                                            <ChevronRightIcon className=\"archive-nav-icon\" id=\"next\" />\n                                        </Link>\n                                        }\n                                    </>\n                                    ) : (\n                                    <>  \n                                        {prevyear &&\n                                        <Link to={`/archive/${prevyear}`} className=\"archive-nav-content\">\n                                            <ChevronLeftIcon className=\"archive-nav-icon\" id=\"previous\" />\n                                            <div className=\"post-nav-headline\">前年</div>\n                                        </Link>\n                                        }\n                                    \n                                        {nextyear &&\n                                        <Link to={`/archive/${nextyear}`} className=\"archive-nav-content\">\n                                            <div className=\"post-nav-headline\">次年</div>\n                                            <ChevronRightIcon className=\"archive-nav-icon\" id=\"next\" />\n                                        </Link>\n                                        }\n                                    </>    \n                                    )   \n                                }\n                                </div>\n                            </div>\n                            <ArchiveNav years={years} yearMonths={yearMonths} PostCounts={PostCounts}/>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n                </MediaQuery>\n                \n                <MediaQuery query=\"(max-width: 800px)\">\n                    <InfiniteScroll posts={posts} isHome={true}/>\n                </MediaQuery>\n                </div>\n                </main>\n            </Layout>\n        </>\n    );\n};\n\nArchive.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n};\n\nexport default Archive;\n\n// loads all posts match each year/yearmonth\n\nexport const pageQuery = graphql`\n    query GhostArchivePostQuery($periodStartDate: Date, $periodEndDate: Date){\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] }\n            filter: { published_at: { gte: $periodStartDate, lt: $periodEndDate } }\n        ) {\n            edges {\n                node {\n                    ...GhostPostFields\n                }\n            }\n        }\n    }\n`;\n"],"names":["data","location","pageContext","prevyearmonth","nextyearmonth","prevyear","nextyear","currentyear","currentmonth","years","yearMonths","PostCounts","posts","allGhostPost","edges","isHome","className","length","query","Link","to","id"],"sourceRoot":""}