{"version":3,"file":"component---src-templates-page-js-68af9df532c5d0d011e0.js","mappings":"0NAsIA,UAzHa,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC1BC,EAAOH,EAAKI,UACXC,EAAiCH,EAAjCG,MAAOC,EAA0BJ,EAA1BI,WAAYC,EAAcL,EAAdK,WAEpBC,EAAML,EAAKM,gBAAgBC,gBAC3BC,EAAgB,CAClBC,KAAM,KACNC,WAAY,kBACZC,UAAW,GAgCX,OA7BJC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAoBC,MAAMC,KAAKC,SAASC,iBAAiB,uBACzDC,EAAoBJ,MAAMC,KAAKC,SAASC,iBAAiB,uBACzDE,EAAoBL,MAAMC,KAAKC,SAASC,iBAAiB,uBAEzDG,EAAgBP,EAAgBQ,OAAOH,EAAiBC,GAiBxDG,EAAW,IAAIC,sBAfA,SAACC,GAClBA,EAAQC,SAAQ,SAAAC,GACZ,GAAIA,EAAMC,eAAgB,CACtB,IAAMC,EAAgBZ,SAASa,cAAc,oBACzCD,GACAA,EAAcE,UAAUC,OAAO,UAEnC,IAAMC,EAAYhB,SAASa,cAAT,YAAmCH,EAAMO,OAAOC,GAAhD,MACdF,GACAA,EAAUF,UAAUK,IAAI,SAE/B,CACJ,GACJ,GAEuD3B,GAExDY,EAAcK,SAAS,SAAAQ,GACnBX,EAASc,QAAQH,EACpB,GACJ,GAAC,IAGM,gCACI,gBAAC,IAAD,CAAUpC,KAAMA,EAAMC,SAAUA,EAAUuC,KAAK,YAC/C,gBAAC,IAAD,KACI,yBAAOA,KAAK,YAAZ,GAA2BrC,EAAKsC,uBAEpC,gBAAC,KAAD,CAAQxC,SAAS,OAAOO,IAAKA,EAAKH,MAAOA,EAAOC,WAAYA,EAAYC,WAAYA,GACpF,wBAAMmC,UAAU,aACZ,0BAAQA,UAAU,sBACbvC,EAAKwC,eACN,uBAAKC,IAAKzC,EAAKwC,iBAGnB,uBAAKD,UAAU,aACX,sBAAIA,UAAU,cAAcvC,EAAK0C,MAAjC,KACA,gBAAC,IAAD,CAAYC,MAAM,sBAClB,uBAAKJ,UAAU,UACX,2BAASA,UAAU,WACf,2BAASA,UAAU,qBAGnB,2BACIA,UAAU,qCACVK,wBAAyB,CAAEC,OAAQ7C,EAAK8C,SAI5C,uBAAKP,UAAU,iBAAf,WAAwCQ,IAAO/C,EAAKgD,YAAYC,OAAxB,gBAC5C,uBAAKV,UAAU,eACP,gBAAC,KAAD,CAAYW,OAAQlD,EAAKmD,mBAGjC,uBAAKZ,UAAU,WACX,uBAAKA,UAAU,qBACX,uBAAKA,UAAU,eACf,gBAAC,KAAD,CAAiBlC,IAAKA,KAEtB,uBAAKkC,UAAU,eACf,gBAAC,KAAD,CAAYrC,MAAOA,EAAOC,WAAYA,EAAYC,WAAYA,SAO1E,gBAAC,IAAD,CAAYuC,MAAM,sBACd,2BAASJ,UAAU,WACf,2BAASA,UAAU,qBAGnB,2BACIA,UAAU,qCACVK,wBAAyB,CAAEC,OAAQ7C,EAAK8C,SAI5C,uBAAKP,UAAU,iBAAf,WAAwCQ,IAAO/C,EAAKoD,WAAWH,OAAvB,gBAC5C,uBAAKV,UAAU,eACP,gBAAC,KAAD,CAAYW,OAAQlD,EAAKmD,uBASxD,C","sources":["webpack://gatsby-starter-ghost/./src/templates/page.js"],"sourcesContent":["import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MediaQuery from \"react-responsive\";\nimport moment from \"moment\";\nimport { graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport { Layout, AuthorCard, TableOfContents, ArchiveNav } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\n\n/**\n * page \n */\nconst Page = ({ data, location, pageContext }) => {\nconst page = data.ghostPage;\nconst {years, yearMonths, PostCounts} = pageContext\n\nconst toc = page.childHtmlRehype.tableOfContents;\nconst scrolloptions = {\n    root: null, \n    rootMargin: \"0% 0px -80% 0px\",\n    threshold: 0 \n};\n\nuseEffect(() => {\n    const targetheadingh1  =  Array.from(document.querySelectorAll(\".content-body > h1\"));\n    const targetheadingh2  =  Array.from(document.querySelectorAll(\".content-body > h2\"));\n    const targetheadingh3  =  Array.from(document.querySelectorAll(\".content-body > h3\"));\n\n    const targetheading = targetheadingh1.concat(targetheadingh2, targetheadingh3)\n\n    const tochighlight = (entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                const currentActive = document.querySelector(\".toc-item.active\");\n                if (currentActive) {\n                    currentActive.classList.remove(\"active\");\n                }\n                const newActive = document.querySelector(`a[href=\"#${entry.target.id}\"]`);\n                if (newActive) {\n                    newActive.classList.add(\"active\");\n                }\n            }\n        })\n    };\n\n    const observer = new IntersectionObserver(tochighlight, scrolloptions)\n    \n    targetheading.forEach( target => {\n        observer.observe(target);\n    })\n},[])\n\n    return (\n        <>\n            <MetaData data={data} location={location} type=\"website\" />\n            <Helmet>\n                <style type=\"text/css\">{`${page.codeinjection_styles}`}</style>\n            </Helmet>\n            <Layout location=\"page\" toc={toc} years={years} yearMonths={yearMonths} PostCounts={PostCounts} >\n            <main className=\"site-main\">\n                <figure className=\"post-feature-image\">\n                    {page.feature_image &&  \n                    <img src={page.feature_image}/>\n                    }\n                </figure>\n                <div className=\"container\">\n                    <h1 className=\"post-title\">{page.title} </h1>\n                    <MediaQuery query=\"(min-width: 800px)\">\n                    <div className=\"Layout\">\n                        <article className=\"content\">\n                            <section className=\"post-full-content\">\n\n                            {/* The main post content */}\n                            <section\n                                className=\"content-body load-external-scripts\"\n                                dangerouslySetInnerHTML={{ __html: page.html }}\n                            />\n                            \n                            </section>\n                            <div className=\"page-updateat\">最終更新日 - {moment(page.updated_at).format(`YYYY年MM月DD日`)}</div>\n                        <div className=\"post-author\">\n                                <AuthorCard author={page.primary_author}/>\n                        </div>\n                        </article>\n                        <div className=\"sidebar\">\n                            <div className=\"sidebar-container\" >\n                                <div className=\"sidebar-box\">\n                                <TableOfContents toc={toc} />\n                                </div>\n                                <div className=\"sidebar-box\">\n                                <ArchiveNav years={years} yearMonths={yearMonths} PostCounts={PostCounts}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </MediaQuery>\n\n                    <MediaQuery query=\"(max-width: 800px)\">\n                        <article className=\"content\">\n                            <section className=\"post-full-content\">\n\n                            {/* The main post content */}\n                            <section\n                                className=\"content-body load-external-scripts\"\n                                dangerouslySetInnerHTML={{ __html: page.html }}\n                            />\n                            \n                            </section>\n                            <div className=\"page-updateat\">最終更新日 - {moment(page.update_at).format(`YYYY年MM月DD日`)}</div>\n                        <div className=\"post-author\">\n                                <AuthorCard author={page.primary_author}/>\n                        </div>\n                        </article>\n                    </MediaQuery>\n                    </div>\n                </main>\n            </Layout>\n        </>\n    );\n};\n\nPage.propTypes = {\n    data: PropTypes.shape({\n        ghostPage: PropTypes.shape({\n            codeinjection_styles: PropTypes.object,\n            title: PropTypes.string.isRequired,\n            html: PropTypes.string.isRequired,\n            feature_image: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n};\n\nexport default Page;\n\nexport const postQuery = graphql`\n    query ($slug: String!) {\n        ghostPage(slug: { eq: $slug }) {\n            ...GhostPageFields\n            primary_author{\n                location\n            }\n            childHtmlRehype {\n                html\n                tableOfContents\n            }\n        }\n    }\n`;\n"],"names":["data","location","pageContext","page","ghostPage","years","yearMonths","PostCounts","toc","childHtmlRehype","tableOfContents","scrolloptions","root","rootMargin","threshold","useEffect","targetheadingh1","Array","from","document","querySelectorAll","targetheadingh2","targetheadingh3","targetheading","concat","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","currentActive","querySelector","classList","remove","newActive","target","id","add","observe","type","codeinjection_styles","className","feature_image","src","title","query","dangerouslySetInnerHTML","__html","html","moment","updated_at","format","author","primary_author","update_at"],"sourceRoot":""}