{"version":3,"file":"component---src-templates-author-js-5725d8859b18e2c925e7.js","mappings":"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","sources":["webpack://gatsby-starter-ghost/./src/templates/author.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MediaQuery from \"react-responsive\";\nimport { graphql } from \"gatsby\";\nimport { Layout, InfiniteScroll } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\nimport { LinkIcon, LocationMarkerIcon } from '@heroicons/react/outline';\nimport { TwitterIcon, FacebookIcon } from \"../../static/images/icons\";\n\n/**\n * Author page \n */\n\n    const Author = ({ data, location }) => {\n    const author = data.ghostAuthor;\n    const posts = data.allGhostPost.edges;\n    const twitterUrl = author.twitter\n        ? `https://twitter.com/${author.twitter.replace(/^@/, ``)}`\n        : null;\n    const facebookUrl = author.facebook\n        ? `https://www.facebook.com/${author.facebook.replace(/^\\//, ``)}`\n        : null;\n    const links = author.website.split(\",\")\n\n    return (\n        <>\n            <MetaData data={data} location={location} type=\"profile\" />\n            <Layout>\n            <main className=\"site-main\">\n            <div className=\"author-cover-image\">\n                {author.cover_image && (\n                <img src={author.cover_image}/>\n                )}\n            </div>\n            <MediaQuery query=\"(min-width: 800px)\">\n                <div className=\"container\">\n                        <div className=\"author-content-box\">\n                        <h1 className=\"author-name\">{author.name}</h1>\n                        {author.bio && <p className=\"author-bio\">{author.bio}</p>}\n                        </div>\n                        <div  className=\"author-linkslocation\">\n                            <div className=\"author-location-item\">\n                                <LocationMarkerIcon className=\"author-link-icon\"/>\n                                <div className=\"author-link-name\">\n                                    {author.location && (author.location)}\n                                </div> \n                            </div>\n                                {twitterUrl && (\n                                    <a\n                                        className=\"author-link-item\"\n                                        id=\"twitter\"\n                                        href={twitterUrl}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                    <TwitterIcon className=\"author-link-icon\"/>\n                                    <div className=\"author-link-name\">\n                                        {author.twitter}\n                                    </div>  \n                                    </a>\n                                )}\n                                {facebookUrl && (\n                                    <a\n                                        className=\"author-link-item\"\n                                        id=\"facebook\"\n                                        href={facebookUrl}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                    <FacebookIcon className=\"author-link-icon\"/>\n                                    <div className=\"author-link-name\">\n                                        {author.facebook}\n                                    </div> \n                                    </a>\n                                )}\n                                {links && (links.map( link => {\n                                    const shortlink = link.replace(\"https://www.\",\"\");\n                                    return(\n                                    <a\n                                        className=\"author-link-item\" \n                                        href={link}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                    <LinkIcon className=\"author-link-icon\" />\n                                    <div className=\"author-link-name\">\n                                        {shortlink}\n                                    </div>\n                                    </a>\n                                )}))}\n                            </div>\n                    </div>\n                    <div className=\"author-image-container\">\n                        {author.profile_image ? (\n                            <img\n                                className=\"author-image\"\n                                src={author.profile_image}\n                            />\n                        ) : (\n                            <img\n                                className=\"default-author-image\"\n                                src=\"/images/icons/avatar.svg\"\n                            />\n                        )}\n                    </div>\n                    <InfiniteScroll posts={posts} location=\"author\"/>\n                </MediaQuery>\n                <MediaQuery query=\"(max-width: 800px)\">\n                    <div className=\"container\">\n                        <div className=\"author-content-box\">\n                        <h1 className=\"author-name\">{author.name}</h1>\n                        {author.bio && <p className=\"author-bio\">{author.bio}</p>}\n                        </div>\n                        <div  className=\"author-linkslocation\">\n                            <div className=\"author-location-item\">\n                                <LocationMarkerIcon className=\"author-link-icon\"/>\n                                <div className=\"author-link-name\">\n                                    {author.location && (author.location)}\n                                </div> \n                            </div>\n                                {twitterUrl && (\n                                    <a\n                                        className=\"author-link-item\"\n                                        id=\"twitter\"\n                                        href={twitterUrl}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                    <TwitterIcon className=\"author-link-icon\"/>\n                                    <div className=\"author-link-name\">\n                                        {author.twitter}\n                                    </div>  \n                                    </a>\n                                )}\n                                {facebookUrl && (\n                                    <a\n                                        className=\"author-link-item\"\n                                        id=\"facebook\"\n                                        href={facebookUrl}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                    <FacebookIcon className=\"author-link-icon\"/>\n                                    <div className=\"author-link-name\">\n                                        {author.facebook}\n                                    </div> \n                                    </a>\n                                )}\n                                {links && (links.map( link => {\n                                    const shortlink = link.replace(\"https://www.\",\"\");\n                                    return(\n                                    <a\n                                        className=\"author-link-item\" \n                                        href={link}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                    <LinkIcon className=\"author-link-icon\" />\n                                    <div className=\"author-link-name\">\n                                        {shortlink}\n                                    </div>\n                                    </a>\n                                )}))}\n                            </div>\n                        <div className=\"author-image-container\">\n                        {author.profile_image ? (\n                            <img\n                                className=\"author-image\"\n                                src={author.profile_image}\n                            />\n                        ) : (\n                            <img\n                                className=\"default-author-image\"\n                                src=\"/images/icons/avatar.svg\"\n                            />\n                        )}\n                        </div>\n                        <InfiniteScroll posts={posts} location=\"author\"/>\n                    </div>\n                </MediaQuery>\n                </main>\n            </Layout>\n        </>\n    );\n};\n\nAuthor.propTypes = {\n    data: PropTypes.shape({\n        ghostAuthor: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            cover_image: PropTypes.string,\n            profile_image: PropTypes.string,\n            website: PropTypes.string,\n            bio: PropTypes.string,\n            location: PropTypes.string,\n            facebook: PropTypes.string,\n            twitter: PropTypes.string,\n        }),\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n};\n\nexport default Author;\n\nexport const pageQuery = graphql`\n    query GhostAuthorQuery($slug: String!) {\n        ghostAuthor(slug: { eq: $slug }) {\n            ...GhostAuthorFields\n        }\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] }\n            filter: { authors: { elemMatch: { slug: { eq: $slug } } } }\n        ) {\n            edges {\n                node {\n                    ...GhostPostFields\n                }\n            }\n        }\n    }\n`;\n"],"names":["data","location","author","ghostAuthor","posts","allGhostPost","edges","twitterUrl","twitter","replace","facebookUrl","facebook","links","website","split","type","className","cover_image","src","query","name","bio","id","href","target","rel","TwitterIcon","FacebookIcon","map","link","shortlink","profile_image"],"sourceRoot":""}